{"version":3,"sources":["components/Services/themoviedb.js","components/MoviesPage/MoviesPage.module.css","components/MoviesPage/MoviesPage.js"],"names":["API_KEY","BASE_URL","fetchWithErrorHandling","a","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrends","fetchTrendsById","trendsId","fetchCast","fetchReviews","fetchSearch","searchValue","module","exports","MoviesPage","location","useLocation","history","useHistory","useState","search","setSearch","value","setValue","query","split","setSearchValue","useEffect","themoviedb","then","onSubmit","event","preventDefault","trim","push","toast","error","className","s","form","wrapper","formInput","type","autoComplete","autoFocus","placeholder","onChange","e","target","btn","results","length","map","result","pageList","link","to","pathname","id","state","from","original_title","autoClose"],"mappings":"oVAAMA,EAAU,mCACVC,EAAW,+B,SAEFC,I,2EAAf,4CAAAC,EAAA,6DAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,mF,wBAOO,SAASC,IACd,OAAOX,EAAuB,GAAD,OACxBD,EADwB,uCACeD,IAGvC,SAASc,EAAgBC,GAC9B,OAAOb,EAAuB,GAAD,OACxBD,EADwB,kBACNc,EADM,oBACcf,EADd,wDAIxB,SAASgB,EAAUD,GACxB,OAAOb,EAAuB,GAAD,OACxBD,EADwB,kBACNc,EADM,4BACsBf,EADtB,oBAIxB,SAASiB,EAAaF,GAC3B,OAAOb,EAAuB,GAAD,OACxBD,EADwB,kBACNc,EADM,4BACsBf,EADtB,2BAKxB,SAASkB,EAAYC,GAC1B,OAAOjB,EAAuB,GAAD,OACxBD,EADwB,iCACSD,EADT,kBAC0BmB,M,mBChCzDC,EAAOC,QAAU,CAAC,KAAO,yBAAyB,UAAY,8BAA8B,IAAM,wBAAwB,QAAU,4BAA4B,SAAW,6BAA6B,KAAO,yBAAyB,QAAU,8B,gKCQnO,SAASC,IACtB,IAAMC,EAAWC,cACXC,EAAUC,cAEhB,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAQT,EAASK,OAAOK,MAAM,KACpC,EAAsCN,mBAASK,EAAM,IAArD,mBAAOb,EAAP,KAAoBe,EAApB,KAEAC,qBAAU,WACHhB,GAILiB,IAAuBjB,GAAakB,KAAKR,KACxC,CAACV,IAkBJ,OACE,uBAAMmB,SAbc,SAAAC,GACpBA,EAAMC,iBAEe,KAAjBV,EAAMW,QAIVhB,EAAQiB,KAAR,wBAA8BZ,IAC9BI,EAAeJ,GACfC,EAAS,KALPY,IAAMC,MAAM,iCASiBC,UAAWC,IAAEC,KAA5C,UACE,sBAAKF,UAAWC,IAAEE,QAAlB,UACE,uBACEH,UAAWC,IAAEG,UACbC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZC,SAzBc,SAAAC,GACpBxB,EAASwB,EAAEC,OAAO1B,QAyBZA,MAAOA,IAET,wBAAQoB,KAAK,SAASL,UAAWC,IAAEW,IAAnC,uBAKD7B,EAAO8B,UAAY9B,EAAO8B,QAAQC,QACjC,sDAAuBxC,KAIvB,6BACGS,EAAO8B,SACN9B,EAAO8B,QAAQE,KAAI,SAAAC,GAAM,OACvB,oBAAoBhB,UAAWC,IAAEgB,SAAjC,SACE,cAAC,IAAD,CACEjB,UAAWC,IAAEiB,KACbC,GAAI,CACFC,SAAS,WAAD,OAAaJ,EAAOK,IAC5BC,MAAO,CAAEC,KAAM7C,IAJnB,SAOGsC,EAAOQ,kBARHR,EAAOK,SAexB,cAAC,IAAD,CAAgBI,UAAW","file":"static/js/movies-page.3386acab.chunk.js","sourcesContent":["const API_KEY = 'c434611fec884383ff05cc84a945718c';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrends() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`,\n  );\n}\nexport function fetchTrendsById(trendsId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${trendsId}?api_key=${API_KEY}&language=en-US&include_image_language=en%2C%20null`,\n  );\n}\nexport function fetchCast(trendsId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${trendsId}/credits?api_key=${API_KEY}&language=en-US`,\n  );\n}\nexport function fetchReviews(trendsId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${trendsId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n  );\n}\n\nexport function fetchSearch(searchValue) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchValue}`,\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MoviesPage_form__3pf7M\",\"formInput\":\"MoviesPage_formInput__16_Y8\",\"btn\":\"MoviesPage_btn__fjpPY\",\"btnBack\":\"MoviesPage_btnBack__2PT0K\",\"pageList\":\"MoviesPage_pageList__1fyfL\",\"link\":\"MoviesPage_link___iJqi\",\"wrapper\":\"MoviesPage_wrapper__3WO-J\"};","import { Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { toast } from 'react-toastify';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport * as themoviedb from '../Services/themoviedb';\nimport s from './MoviesPage.module.css';\n\nexport default function MoviesPage() {\n  const location = useLocation();\n  const history = useHistory();\n\n  const [search, setSearch] = useState([]);\n  const [value, setValue] = useState('');\n\n  const query = location.search.split('=');\n  const [searchValue, setSearchValue] = useState(query[1]);\n\n  useEffect(() => {\n    if (!searchValue) {\n      return;\n    }\n\n    themoviedb.fetchSearch(searchValue).then(setSearch);\n  }, [searchValue]);\n\n  const changeHandler = e => {\n    setValue(e.target.value);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (value.trim() === '') {\n      toast.error('Please enter search request!');\n      return;\n    }\n    history.push(`/movies?query=${value}`);\n    setSearchValue(value);\n    setValue('');\n  };\n\n  return (\n    <form onSubmit={submitHandler} className={s.form}>\n      <div className={s.wrapper}>\n        <input\n          className={s.formInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search films\"\n          onChange={changeHandler}\n          value={value}\n        ></input>\n        <button type=\"submit\" className={s.btn}>\n          Search\n        </button>\n      </div>\n\n      {search.results && !search.results.length && (\n        <h1>{`No results for ${searchValue}`}</h1>\n      )}\n\n      {\n        <ul>\n          {search.results &&\n            search.results.map(result => (\n              <li key={result.id} className={s.pageList}>\n                <Link\n                  className={s.link}\n                  to={{\n                    pathname: `/movies/${result.id}`,\n                    state: { from: location },\n                  }}\n                >\n                  {result.original_title}\n                </Link>\n              </li>\n            ))}\n        </ul>\n      }\n\n      <ToastContainer autoClose={2000} />\n    </form>\n  );\n}\n"],"sourceRoot":""}